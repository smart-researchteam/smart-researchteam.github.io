@article{acmSurveys2021,
 abstract = {A major determinant of the quality of software systems is the quality of their requirements, which should be both understandable and precise. Most requirements are written in natural language, which is good for understandability but lacks precision.To make requirements precise, researchers have for years advocated the use of mathematics-based notations and methods, known as “formal.” Many exist, differing in their style, scope, and applicability. The present survey discusses some of the main formal approaches and compares them to informal methods.The analysis uses a set of nine complementary criteria, such as level of abstraction, tool availability, and traceability support. It classifies the approaches into five categories based on their principal style for specifying requirements: natural-language, semi-formal, automata/graphs, mathematical, and seamless (programming-language-based). It includes examples from all of these categories, altogether 21 different approaches, including for example SysML, Relax, Eiffel, Event-B, and Alloy.The review discusses a number of open questions, including seamlessness, the role of tools and education, and how to make industrial applications benefit more from the contributions of formal approaches.},
 address = {New York, NY, USA},
 articleno = {93},
 author = {Bruel, Jean-Michel and Ebersold, Sophie and Galinier, Florian and Mazzara, Manuel and Naumchev, Alexandr and Meyer, Bertrand},
 doi = {10.1145/3448975},
 hal_id = {hal-03261574},
 hal_version = {v1},
 issn = {0360-0300},
 issue_date = {June 2021},
 journal = {ACM Computing Surveys},
 keywords = {Formal, specification, software, requirement, seamless},
 month = {May},
 number = {5},
 numpages = {36},
 pages = {1-36},
 publisher = {Association for Computing Machinery},
 title = {The Role of Formalism in System Requirements},
 url = {https://doi.org/10.1145/3448975},
 volume = {54},
 year = {2021}
}

